{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-ckecindesign\\\\web-checkin\\\\src\\\\components\\\\FullScreenMessage.js\";\nimport React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Lottie from 'react-lottie';\nimport * as animationData from './pinjump.json';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData.default,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n};\nexport default function SimpleBackdrop({\n  show,\n  handleClose\n}) {\n  const open = show ? true : false;\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: open,\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Lottie, {\n    options: defaultOptions,\n    height: 400,\n    width: 400,\n    isStopped: !open,\n    isPaused: false,\n    eventListeners: [{\n      eventName: 'loopComplete',\n      callback: () => handleClose()\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/web-ckecindesign/web-checkin/src/components/FullScreenMessage.js"],"names":["React","Backdrop","makeStyles","Lottie","animationData","useStyles","theme","backdrop","zIndex","drawer","color","defaultOptions","loop","autoplay","default","rendererSettings","preserveAspectRatio","SimpleBackdrop","show","handleClose","open","classes","eventName","callback"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,aAAZ,MAA+B,gBAA/B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaC,MAAb,GAAsB,CADtB;AAERC,IAAAA,KAAK,EAAE;AAFC;AAD2B,CAAL,CAAN,CAA5B;AAOA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,IADe;AAErBC,EAAAA,QAAQ,EAAE,IAFW;AAGrBT,EAAAA,aAAa,EAAEA,aAAa,CAACU,OAHR;AAIrBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,mBAAmB,EAAE;AADL;AAJG,CAAvB;AASA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,EAA+C;AAC5D,QAAMC,IAAI,GAAGF,IAAI,GAAG,IAAH,GAAU,KAA3B;AACA,QAAMG,OAAO,GAAGhB,SAAS,EAAzB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEgB,OAAO,CAACd,QAA7B;AAAuC,IAAA,IAAI,EAAEa,IAA7C;AAAmD,IAAA,OAAO,EAAED,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,cAAjB;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,SAAS,EAAE,CAACS,IAHd;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,cAAc,EAAE,CACd;AACEE,MAAAA,SAAS,EAAE,cADb;AAEEC,MAAAA,QAAQ,EAAE,MAAMJ,WAAW;AAF7B,KADc,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAkBD","sourcesContent":["import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Lottie from 'react-lottie';\r\nimport * as animationData from './pinjump.json'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData.default,\r\n  rendererSettings: {\r\n    preserveAspectRatio: 'xMidYMid slice'\r\n  }\r\n};\r\n\r\nexport default function SimpleBackdrop({ show, handleClose }) {\r\n  const open = show ? true : false;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <Lottie options={defaultOptions}\r\n          height={400}\r\n          width={400}\r\n          isStopped={!open}\r\n          isPaused={false}\r\n          eventListeners={[\r\n            {\r\n              eventName: 'loopComplete',\r\n              callback: () => handleClose(),\r\n            },\r\n          ]}\r\n        />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}