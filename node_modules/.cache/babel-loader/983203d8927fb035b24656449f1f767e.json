{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-checkin\\\\web-checkin\\\\src\\\\pages\\\\Checkin.js\";\nimport React, { Component, useRef, useEffect, useState } from 'react';\n/*import { Link } from \"react-router-dom\";*/\n\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './Checkin.css';\nimport logo from '../assets/logo.jpg';\nimport Input from '../components/Input';\n\nfunction Checkin() {\n  //class Checkin extends Component {\n  const formRef = useRef(null);\n  const [dados, setDados] = useState([{\n    id: 1,\n    cpf: '45805412030',\n    nome: 'Jose',\n    status: 0\n  }, {\n    id: 2,\n    cpf: '80055465120',\n    nome: 'Matias Silva',\n    status: 0\n  }, {\n    id: 3,\n    cpf: '70036611107',\n    nome: 'Math Card',\n    status: 1\n  }, {\n    id: 4,\n    cpf: '70036618707',\n    nome: ' Luis do Reis Filho Mezenga Matuzalem',\n    status: 0\n  }]);\n  state = {\n    loading: false,\n    btnLoading: '',\n    find: '',\n    queryPesquisa: 'queryName',\n    notfound: '',\n    cont: 0\n  };\n  /*\r\n      constructor(props) {\r\n          super(props);    \r\n          setTimeout(() => {\r\n              this.setState({ \r\n                  dados: [ \r\n                  ...this.state.dados,\r\n                      { id: 5, cpf:'54487987120', nome:'Teste', status:0 } // Adicionando um item\r\n                  ] \r\n              });\r\n          });\r\n      }  */\n\n  function handleSubmit() {\n    //        e.preventDefault();                  \n    let ocultaPesquisa = document.querySelector('.form-pesquisa');\n    ocultaPesquisa.style.display = 'none';\n    let mostraResultado = document.querySelector('.result');\n    mostraResultado.style.display = 'block';\n    let principal = document.querySelector('.form-checkin');\n    principal.style.height = '700px';\n    principal.style.width = '800px';\n    principal.style.marginTop = '300px';\n  }\n  /*    \r\n      handleChange = e => {\r\n          this.setState({ [e.target.name]: [e.target.value]});        \r\n      }\r\n          \r\n   */\n\n\n  inputNome = () => {\n    let find = document.getElementById('find');\n    find.setAttribute('placeholder', 'Pesquise pelo Nome');\n    let queryName = 'queryName';\n    this.setState({\n      queryPesquisa: queryName\n    });\n  };\n  /*\r\n      inputCpf = () => {\r\n          let find = document.getElementById('find');\r\n          find.setAttribute('placeholder', 'Pequise pelo CPF');\r\n          \r\n          let queryCpf = 'queryCpf';\r\n          this.setState({queryPesquisa: queryCpf});        \r\n      }\r\n    \r\n      voltarPesquisa = () => {\r\n          let renderPesquisa = document.querySelector('.form-pesquisa');\r\n          renderPesquisa.style.display = 'block';                         \r\n          \r\n          let ocultaResultado = document.querySelector('.result');\r\n          ocultaResultado.style.display = 'none';                 \r\n          \r\n          let defaultForm = document.querySelector('.form-checkin');\r\n          defaultForm.style.width=  '600px';\r\n          defaultForm.style.height= '400px';   \r\n          defaultForm.style.marginTop = '1px';     \r\n          this.setState({notfound: ''});\r\n          console.log(this.state.notfound);\r\n      }   \r\n      \r\n      confirmaCheckin = (id) => {                \r\n          this.setState({loading: true});\r\n          this.setState({btnLoading: id});\r\n          //console.log(this.state.btnLoading);\r\n       \r\n  \r\n          setTimeout(() => {            \r\n              this.setState({loading: false});\r\n              //loadingCheckin.style.background =  '#ff8080';\r\n              \r\n          const newDados = this.state.dados.map(res => {\r\n              return res.id === id ? { ...res, status: 1} : res;\r\n          })        \r\n          this.setState({dados: newDados});\r\n          }, 4000)\r\n  \r\n      }\r\n  \r\n      desfazCheckin = (id) => {\r\n          this.setState({loading: true});\r\n          this.setState({btnLoading: id});\r\n      \r\n          setTimeout(() => {\r\n              this.setState({loading: false});\r\n              //loadingCheckin.style.background =  '#60B55B';            \r\n          const newDados = this.state.dados.map(res => {\r\n              return res.id === id ? { ...res, status: 0} : res;\r\n          })              \r\n          this.setState({dados: newDados});        \r\n          }, 4000)\r\n      }\r\n    */\n\n  /*const {loading} = this.state;\r\n  const {btnLoading} = this.state; */\n\n\n  return React.createElement(\"div\", {\n    id: \"principal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-checkin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Eventos Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-pesquisa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-checkin-button\",\n    onClick: this.inputNome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Nome\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-checkin-button\",\n    onClick: this.inputCpf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"CPF\"), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"queryPesquisa\",\n    id: \"queryPesquisa\",\n    onChange: this.handleChange,\n    value: this.state.queryPesquisa,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"check-find\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"find\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"form-checkin-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Pesquisar\")))), React.createElement(\"div\", {\n    className: \"result\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titulo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Resultados:\"), React.createElement(\"table\", {\n    id: \"resultado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    className: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, this.state.dados.map(res => //const {id, cpf, nome, status } = res;                                                                                                                                                                                                                              \n  //  this.state.dados.filter(res, index, array => (  \n  res.nome.search(this.state.find) > -1 || res.cpf.search(this.state.find) > -1 ? React.createElement(\"tr\", {\n    key: res.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dados-participantes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, res.nome.toUpperCase()), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, res.cpf)), React.createElement(\"input\", {\n    type: \"hidden\",\n    value: res.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"status-inscricao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Status:\"), React.createElement(\"strong\", {\n    className: \"status-resultado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, res.status === 0 ? 'Pendente  ' : 'Confirmado'))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, res.status === 0 ? React.createElement(\"button\", {\n    className: \"confirma-checkin\",\n    onClick: () => this.confirmaCheckin(res.id),\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, loading && btnLoading == res.id ? React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Confirmar\")) : React.createElement(\"button\", {\n    className: \"desfaz-checkin\",\n    onClick: () => this.desfazCheckin(res.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, loading && btnLoading == res.id ? React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Desfazer\")))) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"N\\xE3o encontrado!\")))), React.createElement(\"button\", {\n    className: \"button-voltar\",\n    onClick: this.voltarPesquisa,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Voltar\"))));\n}\n\nexport default Checkin;","map":{"version":3,"sources":["C:/web-checkin/web-checkin/src/pages/Checkin.js"],"names":["React","Component","useRef","useEffect","useState","Form","Yup","logo","Input","Checkin","formRef","dados","setDados","id","cpf","nome","status","state","loading","btnLoading","find","queryPesquisa","notfound","cont","handleSubmit","ocultaPesquisa","document","querySelector","style","display","mostraResultado","principal","height","width","marginTop","inputNome","getElementById","setAttribute","queryName","setState","inputCpf","handleChange","map","res","search","toUpperCase","confirmaCheckin","desfazCheckin","voltarPesquisa"],"mappings":"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","sourcesContent":["import React, {Component, useRef, useEffect, useState} from 'react';\r\n/*import { Link } from \"react-router-dom\";*/\r\nimport {Form} from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './Checkin.css';\r\nimport logo from '../assets/logo.jpg';\r\nimport Input from '../components/Input';\r\n\r\nfunction Checkin(){  \r\n//class Checkin extends Component {\r\n    const formRef = useRef(null);\r\n    const [dados, setDados] = useState([\r\n        { id: 1, cpf:'45805412030', nome: 'Jose', status:0},\r\n            { id: 2, cpf:'80055465120', nome: 'Matias Silva', status:0},\r\n            { id: 3, cpf:'70036611107', nome: 'Math Card', status:1},\r\n            { id: 4, cpf:'70036618707', nome: ' Luis do Reis Filho Mezenga Matuzalem', status:0},            \r\n    ]);\r\n\r\n    state = {\r\n        loading: false,\r\n        btnLoading: '',\r\n        find: '',\r\n        queryPesquisa: 'queryName',\r\n        notfound: '',\r\n        cont: 0,\r\n       \r\n    };       \r\n    \r\n    \r\n/*\r\n    constructor(props) {\r\n        super(props);    \r\n        setTimeout(() => {\r\n            this.setState({ \r\n                dados: [ \r\n                ...this.state.dados,\r\n                    { id: 5, cpf:'54487987120', nome:'Teste', status:0 } // Adicionando um item\r\n                ] \r\n            });\r\n        });\r\n    }  */\r\n  \r\n    function handleSubmit(){\r\n//        e.preventDefault();                  \r\n      \r\n        let ocultaPesquisa = document.querySelector('.form-pesquisa');\r\n        ocultaPesquisa.style.display = 'none';  \r\n        \r\n        let mostraResultado = document.querySelector('.result');\r\n        mostraResultado.style.display = 'block';\r\n\r\n        let principal = document.querySelector('.form-checkin');        \r\n        principal.style.height = '700px';\r\n        principal.style.width = '800px';\r\n        principal.style.marginTop = '300px';    \r\n                \r\n    } \r\n/*    \r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: [e.target.value]});        \r\n    }\r\n        \r\n */   inputNome = () => {\r\n        let find = document.getElementById('find');\r\n        find.setAttribute('placeholder', 'Pesquise pelo Nome');     \r\n                \r\n        let queryName = 'queryName';\r\n        this.setState({queryPesquisa: queryName});        \r\n    }\r\n/*\r\n    inputCpf = () => {\r\n        let find = document.getElementById('find');\r\n        find.setAttribute('placeholder', 'Pequise pelo CPF');\r\n        \r\n        let queryCpf = 'queryCpf';\r\n        this.setState({queryPesquisa: queryCpf});        \r\n    }\r\n  \r\n    voltarPesquisa = () => {\r\n        let renderPesquisa = document.querySelector('.form-pesquisa');\r\n        renderPesquisa.style.display = 'block';                         \r\n        \r\n        let ocultaResultado = document.querySelector('.result');\r\n        ocultaResultado.style.display = 'none';                 \r\n        \r\n        let defaultForm = document.querySelector('.form-checkin');\r\n        defaultForm.style.width=  '600px';\r\n        defaultForm.style.height= '400px';   \r\n        defaultForm.style.marginTop = '1px';     \r\n        this.setState({notfound: ''});\r\n        console.log(this.state.notfound);\r\n    }   \r\n    \r\n    confirmaCheckin = (id) => {                \r\n        this.setState({loading: true});\r\n        this.setState({btnLoading: id});\r\n        //console.log(this.state.btnLoading);\r\n     \r\n\r\n        setTimeout(() => {            \r\n            this.setState({loading: false});\r\n            //loadingCheckin.style.background =  '#ff8080';\r\n            \r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id === id ? { ...res, status: 1} : res;\r\n        })        \r\n        this.setState({dados: newDados});\r\n        }, 4000)\r\n\r\n    }\r\n\r\n    desfazCheckin = (id) => {\r\n        this.setState({loading: true});\r\n        this.setState({btnLoading: id});\r\n    \r\n        setTimeout(() => {\r\n            this.setState({loading: false});\r\n            //loadingCheckin.style.background =  '#60B55B';            \r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id === id ? { ...res, status: 0} : res;\r\n        })              \r\n        this.setState({dados: newDados});        \r\n        }, 4000)\r\n    }\r\n  */\r\n\r\n    /*const {loading} = this.state;\r\n    const {btnLoading} = this.state; */\r\n    return (\r\n        <div id=\"principal\"> \r\n            <div className=\"form-checkin\">                                                                    \r\n                <img src={logo} alt=\"Eventos Logo\" />                                             \r\n                <div className=\"form-pesquisa\">\r\n                    <Form ref={formRef} onSubmit={handleSubmit}>\r\n                        <button type=\"button\" className=\"form-checkin-button\" onClick={this.inputNome}>Nome</button>                                        \r\n                        <button type=\"button\" className=\"form-checkin-button\" onClick={this.inputCpf}>CPF</button>\r\n                    \r\n                    <input type=\"hidden\" name=\"queryPesquisa\" id=\"queryPesquisa\"\r\n                        onChange={this.handleChange} value={this.state.queryPesquisa} />                   \r\n                        <div className=\"check-find\">\r\n                            <Input name=\"find\"/>        \r\n\r\n                            <button type=\"submit\" className=\"form-checkin-button\">Pesquisar</button>  \r\n                        </div>\r\n                    </Form>    \r\n                </div>                \r\n                <div className=\"result\" style={{display: 'none'}}> \r\n                    <h2 className=\"titulo\">Resultados:</h2>                     \r\n                    <table id=\"resultado\">                      \r\n                        <tbody className=\"tbody\">                                                      \r\n                            {   \r\n                            this.state.dados.map(res => (   //const {id, cpf, nome, status } = res;                                                                                                                                                                                                                              \r\n                            //  this.state.dados.filter(res, index, array => (  \r\n                               res.nome.search(this.state.find) > -1 || res.cpf.search(this.state.find) > -1                                 \r\n                                ?                                                                \r\n                                <tr key={res.id}>                                 \r\n                                    <td>\r\n                                        <div className=\"dados-participantes\">\r\n                                            <strong>{res.nome.toUpperCase()}</strong>\r\n                                            <span>{res.cpf}</span>\r\n                                        </div>                \r\n                                        <input type=\"hidden\" value={res.id}></input>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"status-inscricao\">\r\n                                            <span>Status:</span>\r\n                                            <strong className=\"status-resultado\">{res.status===0 ? 'Pendente  ': 'Confirmado'}</strong>\r\n                                        </div>                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {   res.status === 0 \r\n                                            ?\r\n                                            \r\n                                            <button className=\"confirma-checkin\" onClick={() => this.confirmaCheckin(res.id)} disabled={loading} >\r\n                                               { loading && btnLoading==res.id ? <i className=\"fa fa-refresh fa-spin\"></i> : <span>Confirmar</span> }                                                                                               \r\n                                            </button> \r\n                                            \r\n                                            :   \r\n                                            <button className=\"desfaz-checkin\" onClick={() => this.desfazCheckin(res.id)}>\r\n                                                { loading && btnLoading==res.id ? <i className=\"fa fa-refresh fa-spin\"></i> : <span>Desfazer</span> }                                                 \r\n                                            </button> }                                              \r\n                                    </td>                                       \r\n                                </tr> \r\n                                :                                                  \r\n                                            \r\n                                \r\n                                <span>Não encontrado!</span>\r\n                            ))                                                 \r\n                        } \r\n                        </tbody>              \r\n                    </table>  \r\n                    <button className=\"button-voltar\" onClick={this.voltarPesquisa}>Voltar</button>                \r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Checkin;"]},"metadata":{},"sourceType":"module"}