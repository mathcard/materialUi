{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-checkin\\\\web-checkin\\\\src\\\\pages\\\\Checkin.js\";\nimport React, { Component, useState } from 'react';\n/*import { Link } from \"react-router-dom\";*/\n\nimport './Checkin.css';\nimport logo from '../assets/logo.jpg';\n\nclass Checkin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      find: '',\n      queryPesquisa: '',\n      dados: [{\n        id: 1,\n        cpf: '45805412030',\n        nome: 'Jose Maria',\n        status: 0\n      }, {\n        id: 2,\n        cpf: '80055465120',\n        nome: 'Jose Silva',\n        status: 0\n      }, {\n        id: 3,\n        cpf: '70036611107',\n        nome: 'Math RMHj Jkskdjfks skdjfskjf ksjfskj',\n        status: 1\n      }, {\n        id: 4,\n        cpf: '70036611107',\n        nome: 'Lucas Luis do Reis Filho Mezenga Matuzalem',\n        status: 0\n      }]\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state.find);\n      console.log(this.state.queryPesquisa);\n      let ocultaPesquisa = document.querySelector('.form-pesquisa');\n      ocultaPesquisa.style.display = 'none';\n      let mostraResultado = document.querySelector('.result');\n      mostraResultado.style.display = 'block';\n      let principal = document.querySelector('.form-checkin');\n      principal.style.height = '700px';\n      principal.style.width = '800px';\n      principal.style.marginTop = '300px';\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: [e.target.value]\n      });\n    };\n\n    this.inputNome = () => {\n      let find = document.getElementById('find');\n      find.setAttribute('placeholder', 'Pesquise pelo Nome');\n      let query = document.getElementById('queryPesquisa');\n      query.setAttribute('value', 'queryNome');\n      console.log(this.queryPesquisa);\n    };\n\n    this.inputCpf = () => {\n      let find = document.getElementById('find');\n      find.setAttribute('placeholder', 'Pequise pelo CPF');\n      let query = document.getElementById('queryPesquisa');\n      query.setAttribute('value', 'queryCpf');\n      console.log(this.queryPesquisa);\n    };\n\n    this.voltarPesquisa = () => {\n      let renderPesquisa = document.querySelector('.form-pesquisa');\n      renderPesquisa.style.display = 'block';\n      let ocultaResultado = document.querySelector('.result');\n      ocultaResultado.style.display = 'none';\n      let defaultForm = document.querySelector('.form-checkin');\n      defaultForm.style.width = '600px';\n      defaultForm.style.height = '400px';\n      defaultForm.style.marginTop = '1px';\n    };\n\n    this.confirmaCheckin = id => {\n      console.log(id);\n      const newDados = this.state.dados.map(res => {\n        return res.id == id ? { ...res,\n          status: 1\n        } : res;\n      });\n      console.log(newDados);\n      this.state.dados = newDados;\n      console.log(this.state.dados);\n      /*const participante = this.state.dados.filter(user => (user.id === id));                \r\n      console.log(participante);     */\n    };\n\n    this.desfazCheckin = () => {\n      console.log('Desfaz');\n    };\n  }\n\n  async componentDidMount() {\n    console.log('passou aqui');\n    this.setState({\n      status: 1\n    }); //this.resultadoPesquisa();\n\n    console.log('passou aqui');\n  }\n\n  /*  resultadoPesquisa() {            \r\n        console.log(this.state.find);\r\n        console.log(this.state.queryPesquisa);\r\n        return this.state.dados.map((res, index) => {            \r\n            const {id, cpf, nome, status } = res;                      \r\n            return( \r\n                <tr key={id}>\r\n                    <td>\r\n                        <div className=\"dados-participantes\">\r\n                            <strong>{nome.toUpperCase()}</strong>\r\n                            <span>{cpf}</span>\r\n                        </div>                \r\n                        <input type=\"hidden\" value={id}></input>\r\n                    </td>\r\n                    <td>\r\n                        <div className=\"status-inscricao\">\r\n                            <span>Status:</span>\r\n                            <strong className=\"status-resultado\">{status===0 ? 'Pendente': 'Confirmado'}</strong>\r\n                        </div>                                        \r\n                    </td>\r\n                    <td>\r\n                        { status=== 0 ? \r\n                                <button className=\"button-check\"  \r\n                                className=\"confirma-checkin\" \r\n                                onClick={() => this.confirmaCheckin(id)}>Confirmar</button> \r\n                         \r\n                                :\r\n                                <button className=\"desfaz-checkin\" \r\n                                onClick={this.desfazCheckin}>Desfazer</button> }                                              \r\n                    </td>                                      \r\n                </tr>                                                \r\n            )            \r\n        })   \r\n    }*/\n  render() {\n    return React.createElement(\"div\", {\n      id: \"principal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-checkin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Eventos Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-pesquisa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"form-checkin-button\",\n      onClick: this.inputNome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"form-checkin-button\",\n      onClick: this.inputCpf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"CPF\"), React.createElement(\"input\", {\n      type: \"hidden\",\n      name: \"queryPesquisa\",\n      id: \"queryPesquisa\",\n      onChange: this.handleChange,\n      value: this.state.queryPesquisa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"check-find\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"find\",\n      id: \"find\",\n      placeholder: \"Pesquise pelo nome\",\n      onChange: this.handleChange,\n      value: this.state.find,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"enviar\",\n      type: \"submit\",\n      className: \"form-checkin-button\"\n      /*onClick={this.buscaParticipante}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Pesquisar\")))), React.createElement(\"div\", {\n      className: \"result\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Resultados:\"), React.createElement(\"table\", {\n      id: \"resultado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, //this.resultadoPesquisa()                                                        \n    this.state.dados.map(res => //const {id, cpf, nome, status } = res;                      \n    React.createElement(\"tr\", {\n      key: res.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dados-participantes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, res.nome.toUpperCase()), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, res.cpf)), React.createElement(\"input\", {\n      type: \"hidden\",\n      value: res.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status-inscricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Status:\"), React.createElement(\"strong\", {\n      className: \"status-resultado\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, res.status === 0 ? 'Pendente' : 'Confirmado'))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, res.status === 0 ? React.createElement(\"button\", {\n      className: \"button-check\",\n      className: \"confirma-checkin\",\n      onClick: () => this.confirmaCheckin(res.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Confirmar\") : React.createElement(\"button\", {\n      className: \"desfaz-checkin\",\n      onClick: this.desfazCheckin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Desfazer\")))))), React.createElement(\"button\", {\n      className: \"button-voltar\",\n      onClick: this.voltarPesquisa,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Voltar\"))));\n  }\n\n}\n\nexport default Checkin;","map":{"version":3,"sources":["C:/web-checkin/web-checkin/src/pages/Checkin.js"],"names":["React","Component","useState","logo","Checkin","state","find","queryPesquisa","dados","id","cpf","nome","status","handleSubmit","e","preventDefault","console","log","ocultaPesquisa","document","querySelector","style","display","mostraResultado","principal","height","width","marginTop","handleChange","setState","target","name","value","inputNome","getElementById","setAttribute","query","inputCpf","voltarPesquisa","renderPesquisa","ocultaResultado","defaultForm","confirmaCheckin","newDados","map","res","desfazCheckin","componentDidMount","render","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\n/*import { Link } from \"react-router-dom\";*/\r\nimport './Checkin.css';\r\nimport logo from '../assets/logo.jpg';\r\n\r\n\r\nclass Checkin extends Component {\r\n    state = {\r\n        find: '',\r\n        queryPesquisa: '',\r\n        dados : [\r\n            { id: 1, cpf:'45805412030', nome: 'Jose Maria', status:0},\r\n            { id: 2, cpf:'80055465120', nome: 'Jose Silva', status:0},\r\n            { id: 3, cpf:'70036611107', nome: 'Math RMHj Jkskdjfks skdjfskjf ksjfskj', status:1},\r\n            { id: 4, cpf:'70036611107', nome: 'Lucas Luis do Reis Filho Mezenga Matuzalem', status:0},            \r\n        ]        \r\n      };    \r\n    \r\n    async componentDidMount(){\r\n        console.log('passou aqui');\r\n        this.setState({status : 1});\r\n        //this.resultadoPesquisa();\r\n        console.log('passou aqui');\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();  \r\n        console.log(this.state.find);\r\n        console.log(this.state.queryPesquisa);      \r\n        \r\n        let ocultaPesquisa = document.querySelector('.form-pesquisa');\r\n        ocultaPesquisa.style.display = 'none';  \r\n        \r\n        let mostraResultado = document.querySelector('.result');\r\n        mostraResultado.style.display = 'block';\r\n\r\n        let principal = document.querySelector('.form-checkin');        \r\n        principal.style.height = '700px';\r\n        principal.style.width = '800px';\r\n        principal.style.marginTop = '300px'; \r\n\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: [e.target.value]});        \r\n    }\r\n        \r\n    inputNome = () => {\r\n        let find = document.getElementById('find');\r\n        find.setAttribute('placeholder', 'Pesquise pelo Nome');     \r\n        \r\n        let query = document.getElementById('queryPesquisa');\r\n        query.setAttribute('value', 'queryNome');\r\n        console.log(this.queryPesquisa);\r\n    }\r\n\r\n    inputCpf = () => {\r\n        let find = document.getElementById('find');\r\n        find.setAttribute('placeholder', 'Pequise pelo CPF');\r\n\r\n        let query = document.getElementById('queryPesquisa');\r\n        query.setAttribute('value', 'queryCpf');\r\n        console.log(this.queryPesquisa);\r\n    }\r\n\r\n    /*buscaParticipante = () => {                \r\n        let ocultaPesquisa = document.querySelector('.form-pesquisa');\r\n        ocultaPesquisa.style.display = 'none';  \r\n        \r\n        let mostraResultado = document.querySelector('.result');\r\n        mostraResultado.style.display = 'block';\r\n\r\n        let principal = document.querySelector('.form-checkin');        \r\n        principal.style.height = '700px';\r\n        principal.style.width = '800px';\r\n        principal.style.marginTop = '300px';          \r\n    }*/\r\n\r\n    voltarPesquisa = () => {\r\n        let renderPesquisa = document.querySelector('.form-pesquisa');\r\n        renderPesquisa.style.display = 'block';         \r\n                \r\n        let ocultaResultado = document.querySelector('.result');\r\n        ocultaResultado.style.display = 'none';         \r\n        \r\n        let defaultForm = document.querySelector('.form-checkin');\r\n        defaultForm.style.width=  '600px';\r\n        defaultForm.style.height= '400px';   \r\n        defaultForm.style.marginTop = '1px';                \r\n    }   \r\n    \r\n    confirmaCheckin = (id) => {\r\n        \r\n        console.log(id);\r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id == id ? { ...res, status: 1} : res;\r\n        })\r\n        console.log(newDados);\r\n        this.state.dados = newDados;\r\n        console.log(this.state.dados);\r\n        /*const participante = this.state.dados.filter(user => (user.id === id));                \r\n        console.log(participante);     */\r\n        \r\n    }\r\n\r\n    desfazCheckin = () => {\r\n        console.log('Desfaz');\r\n    }\r\n  \r\n  /*  resultadoPesquisa() {            \r\n        console.log(this.state.find);\r\n        console.log(this.state.queryPesquisa);\r\n        return this.state.dados.map((res, index) => {            \r\n            const {id, cpf, nome, status } = res;                      \r\n            return( \r\n                <tr key={id}>\r\n                    <td>\r\n                        <div className=\"dados-participantes\">\r\n                            <strong>{nome.toUpperCase()}</strong>\r\n                            <span>{cpf}</span>\r\n                        </div>                \r\n                        <input type=\"hidden\" value={id}></input>\r\n                    </td>\r\n                    <td>\r\n                        <div className=\"status-inscricao\">\r\n                            <span>Status:</span>\r\n                            <strong className=\"status-resultado\">{status===0 ? 'Pendente': 'Confirmado'}</strong>\r\n                        </div>                                        \r\n                    </td>\r\n                    <td>\r\n                        { status=== 0 ? \r\n                                <button className=\"button-check\"  \r\n                                className=\"confirma-checkin\" \r\n                                onClick={() => this.confirmaCheckin(id)}>Confirmar</button> \r\n                         \r\n                                :\r\n                                <button className=\"desfaz-checkin\" \r\n                                onClick={this.desfazCheckin}>Desfazer</button> }                                              \r\n                    </td>                                      \r\n                </tr>                                                \r\n            )            \r\n        })   \r\n    }*/\r\n\r\n\r\nrender(){\r\n    return (\r\n        <div id=\"principal\">\r\n            <div className=\"form-checkin\">                                                                    \r\n            <img src={logo} alt=\"Eventos Logo\" />                               \r\n            <div className=\"form-pesquisa\">\r\n            <form onSubmit={this.handleSubmit}>\r\n                 <button type=\"button\" className=\"form-checkin-button\" onClick={this.inputNome}>Nome</button>                                        \r\n                <button type=\"button\" className=\"form-checkin-button\" onClick={this.inputCpf}>CPF</button>\r\n               \r\n               <input type=\"hidden\" name=\"queryPesquisa\" id=\"queryPesquisa\"\r\n                onChange={this.handleChange} value={this.state.queryPesquisa} />                   \r\n\r\n                <div className=\"check-find\">\r\n                    <input type=\"text\" name=\"find\" id=\"find\" placeholder=\"Pesquise pelo nome\" \r\n                     onChange={this.handleChange} value={this.state.find} />               \r\n\r\n                    <button className=\"enviar\" type=\"submit\" className=\"form-checkin-button\" /*onClick={this.buscaParticipante}*/>Pesquisar</button>  \r\n                </div>\r\n                </form>    \r\n            </div>\r\n                \r\n                <div className=\"result\" style={{display: 'none'}}> \r\n                    <h2 className=\"titulo\">Resultados:</h2>                   \r\n                    <table id=\"resultado\">                      \r\n                        <tbody>\r\n                            {//this.resultadoPesquisa()                                                        \r\n                            this.state.dados.map(res => (           \r\n                                //const {id, cpf, nome, status } = res;                      \r\n                                \r\n                                <tr key={res.id}>\r\n                                    <td>\r\n                                        <div className=\"dados-participantes\">\r\n                                            <strong>{res.nome.toUpperCase()}</strong>\r\n                                            <span>{res.cpf}</span>\r\n                                        </div>                \r\n                                        <input type=\"hidden\" value={res.id}></input>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"status-inscricao\">\r\n                                            <span>Status:</span>\r\n                                            <strong className=\"status-resultado\">{res.status===0 ? 'Pendente': 'Confirmado'}</strong>\r\n                                        </div>                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        { res.status=== 0 ? \r\n                                                <button className=\"button-check\"  \r\n                                                className=\"confirma-checkin\" \r\n                                                onClick={() => this.confirmaCheckin(res.id)}>Confirmar</button> \r\n                                        \r\n                                                :\r\n                                                <button className=\"desfaz-checkin\" \r\n                                                onClick={this.desfazCheckin}>Desfazer</button> }                                              \r\n                                    </td>                                      \r\n                                </tr>                          \r\n                                ))                      \r\n                            }\r\n                            \r\n                        </tbody>              \r\n                     </table>  \r\n                     <button className=\"button-voltar\" onClick={this.voltarPesquisa}>Voltar</button>                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Checkin;"]},"metadata":{},"sourceType":"module"}