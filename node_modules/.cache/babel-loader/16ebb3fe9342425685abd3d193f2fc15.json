{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-checkin\\\\web-checkin\\\\src\\\\pages\\\\Checkin.js\";\nimport React, { Component, useRef, useEffect, useState } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './Checkin.css';\nimport logo from '../assets/logo.jpg';\nimport Input from '../components/Input';\n\nfunction Checkin() {\n  //class Checkin extends Component {\n  const formRef = useRef(null);\n  const [dados, setDados] = useState([{\n    id: 1,\n    cpf: '45805412030',\n    nome: 'Jose',\n    status: 0\n  }, {\n    id: 2,\n    cpf: '80055465120',\n    nome: 'Matias Silva',\n    status: 0\n  }, {\n    id: 3,\n    cpf: '70036611107',\n    nome: 'Math Card',\n    status: 1\n  }, {\n    id: 4,\n    cpf: '70036618707',\n    nome: ' Luis do Reis Filho Mezenga Matuzalem',\n    status: 0\n  }]);\n  const [find, setFind] = useState(['']);\n  const find2 = '1';\n\n  async function handleSubmit(data, {\n    reset\n  }) {\n    //        e.preventDefault();                  \n    let ocultaPesquisa = document.querySelector('.form-pesquisa');\n    ocultaPesquisa.style.display = 'none';\n    let mostraResultado = document.querySelector('.result');\n    mostraResultado.style.display = 'block';\n    let principal = document.querySelector('.form-checkin');\n    principal.style.height = '700px';\n    principal.style.width = '800px';\n    principal.style.marginTop = '300px';\n\n    try {\n      const schema = Yup.object().shape({\n        find: Yup.string().required('O nome é obrigatório')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      formRef.current.setErrors({}); //console.log(data);\n\n      const find2 = formRef.current.getFieldValue('find'); // console.log(find2);\n    } catch (err) {//   console.log(err);\n    }\n  }\n\n  function inputNome() {\n    let find = document.getElementById('find');\n    find.setAttribute('placeholder', 'Pesquise pelo Nome');\n    let queryName = 'queryName';\n    this.setState({\n      queryPesquisa: queryName\n    });\n  }\n\n  function inputCpf() {\n    let find = document.getElementById('find');\n    find.setAttribute('placeholder', 'Pequise pelo CPF');\n    let queryCpf = 'queryCpf';\n    this.setState({\n      queryPesquisa: queryCpf\n    });\n  }\n  /*\r\n    voltarPesquisa = () => {\r\n        let renderPesquisa = document.querySelector('.form-pesquisa');\r\n        renderPesquisa.style.display = 'block';                         \r\n        \r\n        let ocultaResultado = document.querySelector('.result');\r\n        ocultaResultado.style.display = 'none';                 \r\n        \r\n        let defaultForm = document.querySelector('.form-checkin');\r\n        defaultForm.style.width=  '600px';\r\n        defaultForm.style.height= '400px';   \r\n        defaultForm.style.marginTop = '1px';     \r\n        this.setState({notfound: ''});\r\n        console.log(this.state.notfound);\r\n    }   \r\n    \r\n    confirmaCheckin = (id) => {                \r\n        this.setState({loading: true});\r\n        this.setState({btnLoading: id});\r\n        //console.log(this.state.btnLoading);\r\n     \r\n          setTimeout(() => {            \r\n            this.setState({loading: false});\r\n            //loadingCheckin.style.background =  '#ff8080';\r\n            \r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id === id ? { ...res, status: 1} : res;\r\n        })        \r\n        this.setState({dados: newDados});\r\n        }, 4000)\r\n      }\r\n      desfazCheckin = (id) => {\r\n        this.setState({loading: true});\r\n        this.setState({btnLoading: id});\r\n    \r\n        setTimeout(() => {\r\n            this.setState({loading: false});\r\n            //loadingCheckin.style.background =  '#60B55B';            \r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id === id ? { ...res, status: 0} : res;\r\n        })              \r\n        this.setState({dados: newDados});        \r\n        }, 4000)\r\n    }\r\n  */\n\n\n  return React.createElement(\"div\", {\n    id: \"principal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-checkin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Eventos Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-pesquisa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-checkin-button\",\n    onClick: inputNome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Nome\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"form-checkin-button\",\n    onClick: inputCpf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"CPF\"), React.createElement(\"div\", {\n    className: \"check-find\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"find\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"form-checkin-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Pesquisar\")))), React.createElement(\"div\", {\n    className: \"result\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titulo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Resultados:\"), React.createElement(\"table\", {\n    id: \"resultado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    className: \"tbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, dados.map(res => ( //const {id, cpf, nome, status } = res;                                                                                                                                                                                                                              \n  //  this.state.dados.filter(res, index, array => (  \n  console.log(`aqui `), console.log(find2), res.nome.search(find2) > -1 || res.cpf.search(find2) > -1 ? React.createElement(\"tr\", {\n    key: res.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dados-participantes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, res.nome.toUpperCase()), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, res.cpf)), React.createElement(\"input\", {\n    type: \"hidden\",\n    value: res.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"status-inscricao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Status:\"), React.createElement(\"strong\", {\n    className: \"status-resultado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, res.status === 0 ? 'Pendente  ' : 'Confirmado'))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"N\\xE3o encontrado!\"))))))));\n}\n\nexport default Checkin;","map":{"version":3,"sources":["C:/web-checkin/web-checkin/src/pages/Checkin.js"],"names":["React","Component","useRef","useEffect","useState","Form","Yup","logo","Input","Checkin","formRef","dados","setDados","id","cpf","nome","status","find","setFind","find2","handleSubmit","data","reset","ocultaPesquisa","document","querySelector","style","display","mostraResultado","principal","height","width","marginTop","schema","object","shape","string","required","validate","abortEarly","current","setErrors","getFieldValue","err","inputNome","getElementById","setAttribute","queryName","setState","queryPesquisa","inputCpf","queryCpf","map","res","console","log","search","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA4D,OAA5D;AAEA,SAAQC,IAAR,QAAmB,aAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,uCAAP;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,OAAT,GAAkB;AAClB;AACI,QAAMC,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAC/B;AAAES,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAC,aAAb;AAA4BC,IAAAA,IAAI,EAAE,MAAlC;AAA0CC,IAAAA,MAAM,EAAC;AAAjD,GAD+B,EAE3B;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAC,aAAb;AAA4BC,IAAAA,IAAI,EAAE,cAAlC;AAAkDC,IAAAA,MAAM,EAAC;AAAzD,GAF2B,EAG3B;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAC,aAAb;AAA4BC,IAAAA,IAAI,EAAE,WAAlC;AAA+CC,IAAAA,MAAM,EAAC;AAAtD,GAH2B,EAI3B;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAC,aAAb;AAA4BC,IAAAA,IAAI,EAAE,uCAAlC;AAA2EC,IAAAA,MAAM,EAAC;AAAlF,GAJ2B,CAAD,CAAlC;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AACA,QAAMe,KAAK,GAAG,GAAd;;AAGA,iBAAeC,YAAf,CAA4BC,IAA5B,EAAkC;AAACC,IAAAA;AAAD,GAAlC,EAA0C;AAC9C;AAEQ,QAAIC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAArB;AACAF,IAAAA,cAAc,CAACG,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AAEA,QAAIC,eAAe,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAtB;AACAG,IAAAA,eAAe,CAACF,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC;AAEA,QAAIE,SAAS,GAAGL,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAhB;AACAI,IAAAA,SAAS,CAACH,KAAV,CAAgBI,MAAhB,GAAyB,OAAzB;AACAD,IAAAA,SAAS,CAACH,KAAV,CAAgBK,KAAhB,GAAwB,OAAxB;AACAF,IAAAA,SAAS,CAACH,KAAV,CAAgBM,SAAhB,GAA4B,OAA5B;;AAEA,QAAG;AACC,YAAMC,MAAM,GAAG3B,GAAG,CAAC4B,MAAJ,GAAaC,KAAb,CAAmB;AAC9BlB,QAAAA,IAAI,EAAEX,GAAG,CAAC8B,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AADwB,OAAnB,CAAf;AAIA,YAAMJ,MAAM,CAACK,QAAP,CAAgBjB,IAAhB,EAAsB;AACxBkB,QAAAA,UAAU,EAAE;AADY,OAAtB,CAAN;AAGA7B,MAAAA,OAAO,CAAC8B,OAAR,CAAgBC,SAAhB,CAA0B,EAA1B,EARD,CASC;;AACA,YAAMtB,KAAK,GAAGT,OAAO,CAAC8B,OAAR,CAAgBE,aAAhB,CAA8B,MAA9B,CAAd,CAVD,CAWA;AACF,KAZD,CAYC,OAAMC,GAAN,EAAU,CACV;AACA;AAEJ;;AAED,WAASC,SAAT,GAAoB;AAChB,QAAI3B,IAAI,GAAGO,QAAQ,CAACqB,cAAT,CAAwB,MAAxB,CAAX;AACA5B,IAAAA,IAAI,CAAC6B,YAAL,CAAkB,aAAlB,EAAiC,oBAAjC;AAEA,QAAIC,SAAS,GAAG,WAAhB;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,aAAa,EAAEF;AAAhB,KAAd;AACH;;AAED,WAASG,QAAT,GAAmB;AACf,QAAIjC,IAAI,GAAGO,QAAQ,CAACqB,cAAT,CAAwB,MAAxB,CAAX;AACA5B,IAAAA,IAAI,CAAC6B,YAAL,CAAkB,aAAlB,EAAiC,kBAAjC;AAEA,QAAIK,QAAQ,GAAG,UAAf;AACA,SAAKH,QAAL,CAAc;AAACC,MAAAA,aAAa,EAAEE;AAAhB,KAAd;AACH;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDE,SACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAE5C,IAAV;AAAgB,IAAA,GAAG,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEG,OAAX;AAAoB,IAAA,QAAQ,EAAEU,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qBAAhC;AAAsD,IAAA,OAAO,EAAEwB,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qBAAhC;AAAsD,IAAA,OAAO,EAAEM,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CANJ,CADJ,CAFJ,EAgBI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACvB,MAAAA,OAAO,EAAE;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAO,IAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIhB,KAAK,CAACyC,GAAN,CAAUC,GAAG,MAAQ;AACrB;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAa,OAAb,GACAD,OAAO,CAACC,GAAR,CAAYpC,KAAZ,CADA,EAEDkC,GAAG,CAACtC,IAAJ,CAASyC,MAAT,CAAgBrC,KAAhB,IAAyB,CAAC,CAA1B,IAA+BkC,GAAG,CAACvC,GAAJ,CAAQ0C,MAAR,CAAerC,KAAf,IAAwB,CAAC,CAAxD,GAEC;AAAI,IAAA,GAAG,EAAEkC,GAAG,CAACxC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASwC,GAAG,CAACtC,IAAJ,CAAS0C,WAAT,EAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,GAAG,CAACvC,GAAX,CAFJ,CADJ,EAKI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEuC,GAAG,CAACxC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCwC,GAAG,CAACrC,MAAJ,KAAa,CAAb,GAAiB,YAAjB,GAA+B,YAArE,CAFJ,CADJ,CARJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAFD,GAiCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BArCS,CAAb,CAFJ,CADJ,CAFJ,CAhBJ,CADJ,CADJ;AAuEH;;AAED,eAAeP,OAAf","sourcesContent":["import React, {Component, useRef, useEffect, useState} from 'react';\r\n\r\nimport {Form} from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './Checkin.css';\r\nimport logo from '../assets/logo.jpg';\r\nimport Input from '../components/Input';\r\n\r\nfunction Checkin(){  \r\n//class Checkin extends Component {\r\n    const formRef = useRef(null);\r\n    const [dados, setDados] = useState([\r\n        { id: 1, cpf:'45805412030', nome: 'Jose', status:0},\r\n            { id: 2, cpf:'80055465120', nome: 'Matias Silva', status:0},\r\n            { id: 3, cpf:'70036611107', nome: 'Math Card', status:1},\r\n            { id: 4, cpf:'70036618707', nome: ' Luis do Reis Filho Mezenga Matuzalem', status:0},            \r\n    ]);\r\n\r\n    const [find, setFind] = useState(['']);\r\n    const find2 = '1';\r\n\r\n    \r\n    async function handleSubmit(data, {reset}){\r\n//        e.preventDefault();                  \r\n      \r\n        let ocultaPesquisa = document.querySelector('.form-pesquisa');\r\n        ocultaPesquisa.style.display = 'none';  \r\n        \r\n        let mostraResultado = document.querySelector('.result');\r\n        mostraResultado.style.display = 'block';\r\n\r\n        let principal = document.querySelector('.form-checkin');        \r\n        principal.style.height = '700px';\r\n        principal.style.width = '800px';\r\n        principal.style.marginTop = '300px';    \r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                find: Yup.string().required('O nome é obrigatório'),                \r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            })\r\n            formRef.current.setErrors({}); \r\n            //console.log(data);\r\n            const find2 = formRef.current.getFieldValue('find');\r\n           // console.log(find2);\r\n        }catch(err){\r\n         //   console.log(err);\r\n        }\r\n                \r\n    } \r\n\r\n    function inputNome(){\r\n        let find = document.getElementById('find');\r\n        find.setAttribute('placeholder', 'Pesquise pelo Nome');     \r\n                \r\n        let queryName = 'queryName';\r\n        this.setState({queryPesquisa: queryName});        \r\n    }\r\n\r\n    function inputCpf(){\r\n        let find = document.getElementById('find');\r\n        find.setAttribute('placeholder', 'Pequise pelo CPF');\r\n        \r\n        let queryCpf = 'queryCpf';\r\n        this.setState({queryPesquisa: queryCpf});        \r\n    }\r\n  /*\r\n    voltarPesquisa = () => {\r\n        let renderPesquisa = document.querySelector('.form-pesquisa');\r\n        renderPesquisa.style.display = 'block';                         \r\n        \r\n        let ocultaResultado = document.querySelector('.result');\r\n        ocultaResultado.style.display = 'none';                 \r\n        \r\n        let defaultForm = document.querySelector('.form-checkin');\r\n        defaultForm.style.width=  '600px';\r\n        defaultForm.style.height= '400px';   \r\n        defaultForm.style.marginTop = '1px';     \r\n        this.setState({notfound: ''});\r\n        console.log(this.state.notfound);\r\n    }   \r\n    \r\n    confirmaCheckin = (id) => {                \r\n        this.setState({loading: true});\r\n        this.setState({btnLoading: id});\r\n        //console.log(this.state.btnLoading);\r\n     \r\n\r\n        setTimeout(() => {            \r\n            this.setState({loading: false});\r\n            //loadingCheckin.style.background =  '#ff8080';\r\n            \r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id === id ? { ...res, status: 1} : res;\r\n        })        \r\n        this.setState({dados: newDados});\r\n        }, 4000)\r\n\r\n    }\r\n\r\n    desfazCheckin = (id) => {\r\n        this.setState({loading: true});\r\n        this.setState({btnLoading: id});\r\n    \r\n        setTimeout(() => {\r\n            this.setState({loading: false});\r\n            //loadingCheckin.style.background =  '#60B55B';            \r\n        const newDados = this.state.dados.map(res => {\r\n            return res.id === id ? { ...res, status: 0} : res;\r\n        })              \r\n        this.setState({dados: newDados});        \r\n        }, 4000)\r\n    }\r\n  */\r\n    \r\n    return (\r\n        <div id=\"principal\"> \r\n            <div className=\"form-checkin\">                                                                    \r\n                <img src={logo} alt=\"Eventos Logo\" />                                             \r\n                <div className=\"form-pesquisa\">\r\n                    <Form ref={formRef} onSubmit={handleSubmit}>\r\n                        <button type=\"button\" className=\"form-checkin-button\" onClick={inputNome}>Nome</button>                                        \r\n                        <button type=\"button\" className=\"form-checkin-button\" onClick={inputCpf}>CPF</button>\r\n                    \r\n                    {/*<input type=\"hidden\" name=\"queryPesquisa\" id=\"queryPesquisa\"\r\n                        onChange={this.handleChange} value={this.state.queryPesquisa} />                   */}\r\n                        <div className=\"check-find\">\r\n                            <Input name=\"find\"/>        \r\n\r\n                            <button type=\"submit\" className=\"form-checkin-button\">Pesquisar</button>  \r\n                        </div>\r\n                    </Form>    \r\n                </div>                \r\n                <div className=\"result\" style={{display: 'none'}}> \r\n                    <h2 className=\"titulo\">Resultados:</h2>                     \r\n                    <table id=\"resultado\">                      \r\n                        <tbody className=\"tbody\">                                                      \r\n                            {   \r\n                            dados.map(res => (   //const {id, cpf, nome, status } = res;                                                                                                                                                                                                                              \r\n                            //  this.state.dados.filter(res, index, array => (  \r\n                                console.log(`aqui `),\r\n                                console.log(find2),\r\n                               res.nome.search(find2) > -1 || res.cpf.search(find2) > -1                                 \r\n                                ?                                                                \r\n                                <tr key={res.id}>                                 \r\n                                    <td>\r\n                                        <div className=\"dados-participantes\">\r\n                                            <strong>{res.nome.toUpperCase()}</strong>\r\n                                            <span>{res.cpf}</span>\r\n                                        </div>                \r\n                                        <input type=\"hidden\" value={res.id}></input>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"status-inscricao\">\r\n                                            <span>Status:</span>\r\n                                            <strong className=\"status-resultado\">{res.status===0 ? 'Pendente  ': 'Confirmado'}</strong>\r\n                                        </div>                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {  /* res.status === 0 \r\n                                            ?\r\n                                            \r\n                                            <button className=\"confirma-checkin\" onClick={() => this.confirmaCheckin(res.id)} disabled={loading} >\r\n                                               { loading && btnLoading==res.id ? <i className=\"fa fa-refresh fa-spin\"></i> : <span>Confirmar</span> }  \r\n                                            </button> \r\n                                            \r\n                                            :   \r\n                                            <button className=\"desfaz-checkin\" onClick={() => this.desfazCheckin(res.id)}>\r\n                                                { loading && btnLoading==res.id ? <i className=\"fa fa-refresh fa-spin\"></i> : <span>Desfazer</span> }                                                 \r\n                                            </button> */}                                              \r\n                                    </td>                                       \r\n                                </tr> \r\n                                :                                                  \r\n                                            \r\n                                \r\n                                <span>Não encontrado!</span>\r\n                            ))                                                 \r\n                        } \r\n                        </tbody>              \r\n                    </table>  \r\n                    {/*<button className=\"button-voltar\" onClick={voltarPesquisa}>Voltar</button>                */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Checkin;"]},"metadata":{},"sourceType":"module"}