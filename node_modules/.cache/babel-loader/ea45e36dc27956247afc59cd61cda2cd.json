{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-ckecindesign\\\\web-checkin\\\\src\\\\pages\\\\Checkin.js\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CustomButton from '../components/CustomButton';\nimport TextField from '@material-ui/core/TextField';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport FullScreenMessage from './../components/FullScreenMessage';\n/*import { Link } from 'react-router-dom';*/\n\nimport logo from '../assets/logo.jpg';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    marginTop: theme.spacing(8),\n    textAlign: 'center',\n    width: \"100%\",\n    height: \"100%\"\n  },\n  form: {\n    width: '100%'\n  },\n  gridBotao: {\n    marginTop: theme.spacing(8)\n  },\n  gridPesquisa: {\n    marginTop: theme.spacing(8)\n  },\n  inline: {\n    display: 'inline'\n  },\n  nome: {\n    maxwidth: '80%'\n  },\n  status: {\n    paddingRight: theme.spacing(10),\n    textAlign: 'right',\n    height: '100%'\n  },\n  botaoVoltar: {\n    marginTop: '20px'\n  }\n}));\n\nconst Checkin = props => {\n  const [find, setFind] = useState('');\n  const [typeFind, setTypeFind] = useState('nome');\n  const [queryPesquisa, setQueryPesquisa] = useState('');\n  const [showForm, setShowForm] = useState(true);\n  const [showMessage, setShowMessage] = useState(false);\n  const [dados, setDados] = useState([{\n    id: 1,\n    cpf: '458.054.120-30',\n    nome: 'Jose',\n    status: 0\n  }, {\n    id: 2,\n    cpf: '800.554.651-20',\n    nome: 'Jose Silva',\n    status: 0\n  }, {\n    id: 3,\n    cpf: '700.366.111-07',\n    nome: 'Math Card',\n    status: 1\n  }, {\n    id: 4,\n    cpf: '700.366.187-07',\n    nome: 'Lucas Luis do Reis Filho Mezenga Matuzalem',\n    status: 0\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*console.log(this.state.find);\r\n        */\n\n    console.log(queryPesquisa); // FUNCIONOU\n\n    /*if(this.state.find == 'e'){\r\n        console.log('Essa merda traz um vetor');\r\n    }*/\n\n    setShowForm(false);\n  };\n\n  const handleChange = event => {\n    event.target.name === 'find' ? setFind(event.target.value) : setQueryPesquisa(event.target.value);\n  };\n\n  const inputNome = () => {\n    setTypeFind('nome');\n    let queryName = 'queryName';\n    setQueryPesquisa(queryName);\n  };\n\n  const inputCpf = () => {\n    setTypeFind('cpf');\n    let queryCpf = 'queryCpf';\n    setQueryPesquisa(queryCpf);\n  };\n\n  const voltarPesquisa = () => {\n    setShowForm(true);\n  };\n\n  const confirmaCheckin = id => {\n    const newDados = dados.map(res => {\n      return res.id === id ? { ...res,\n        status: 1\n      } : res;\n    });\n    setDados(newDados);\n    setShowMessage(true);\n  };\n\n  const desfazCheckin = id => {\n    const newDados = dados.map(res => {\n      return res.id === id ? { ...res,\n        status: 0\n      } : res;\n    });\n    setDados(newDados);\n  };\n\n  const classes = useStyles();\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Checkin\"), showForm ? React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    className: classes.gridBotao,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    onClick: inputNome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Nome\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    onClick: inputCpf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"CPF\"))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    className: classes.gridPesquisa,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, typeFind === 'nome' ? React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    name: \"find\",\n    id: \"find\",\n    label: \"Pesquise pelo Nome\",\n    defaultValue: find,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })) : React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    name: \"find\",\n    id: \"find\",\n    label: \"Pesquise pelo CPF\",\n    defaultValue: find,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Pesquisar\")))) : React.createElement(\"div\", {\n    className: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(List, {\n    subheader: React.createElement(ListSubheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Par\\xE2metro de pesquisa: \", find),\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(List, {\n    id: \"resultado\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, dados.map((res, index) => {\n    //const {id, cpf, nome, status } = res;                                                                                                                                                                                              \n    //res.id == null ? <span>Vazio</span> :\n    if (res.nome && (res.nome.search(find) > -1 || res.cpf.search(find) > -1)) {\n      return React.createElement(\"div\", {\n        key: res.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: res.id,\n        display: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: classes.nome,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, res.nome.substring(0, 1))), React.createElement(ListItemText, {\n        className: classes.nome,\n        primary: res.nome.toUpperCase(),\n        secondary: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          className: classes.inline,\n          color: \"textPrimary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }), res.cpf),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        className: classes.status,\n        secondary: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          className: classes.inline,\n          color: \"textPrimary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, res.status === 0 ? 'Pendente  ' : 'Confirmado')),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, res.status === 0 ? React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"Confirmar\",\n        title: \"Confirmar\",\n        onClick: () => confirmaCheckin(res.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(EventAvailableIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })) : React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"Desfazer\",\n        title: \"Desfazer\",\n        onClick: () => desfazCheckin(res.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(EventAvailableIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })))), React.createElement(Divider, {\n        variant: \"inset\",\n        component: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }));\n    }\n  })), React.createElement(Button, {\n    className: classes.botaoVoltar,\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    onClick: voltarPesquisa,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Voltar\")), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"queryPesquisa\",\n    id: \"queryPesquisa\",\n    onChange: handleChange,\n    value: queryPesquisa,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })), React.createElement(FullScreenMessage, {\n    show: showMessage,\n    handleClose: () => setShowMessage(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }));\n};\n\nexport default Checkin;","map":{"version":3,"sources":["C:/web-ckecindesign/web-checkin/src/pages/Checkin.js"],"names":["React","useState","Grid","CustomButton","TextField","Container","makeStyles","List","ListSubheader","ListItem","Divider","ListItemText","ListItemAvatar","ListItemSecondaryAction","Avatar","Typography","IconButton","EventAvailableIcon","Button","Paper","FullScreenMessage","logo","useStyles","theme","paper","paddingTop","spacing","paddingBottom","marginTop","textAlign","width","height","form","gridBotao","gridPesquisa","inline","display","nome","maxwidth","status","paddingRight","botaoVoltar","Checkin","props","find","setFind","typeFind","setTypeFind","queryPesquisa","setQueryPesquisa","showForm","setShowForm","showMessage","setShowMessage","dados","setDados","id","cpf","handleSubmit","e","preventDefault","console","log","handleChange","event","target","name","value","inputNome","queryName","inputCpf","queryCpf","voltarPesquisa","confirmaCheckin","newDados","map","res","desfazCheckin","classes","root","index","search","substring","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,iBAAP,MAA8B,mCAA9B;AAEA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAACiB,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADP;AAELC,IAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFV;AAGLE,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CAHN;AAILG,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,KAAK,EAAE,MALF;AAMLC,IAAAA,MAAM,EAAE;AANH,GAD8B;AASrCC,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE;AADH,GAT+B;AAYrCG,EAAAA,SAAS,EAAE;AACTL,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GAZ0B;AAerCQ,EAAAA,YAAY,EAAE;AACZN,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADC,GAfuB;AAkBrCS,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAlB6B;AAqBrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GArB+B;AAwBrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAEjB,KAAK,CAACG,OAAN,CAAc,EAAd,CADR;AAENG,IAAAA,SAAS,EAAE,OAFL;AAGNE,IAAAA,MAAM,EAAE;AAHF,GAxB6B;AA6BrCU,EAAAA,WAAW,EAAE;AACXb,IAAAA,SAAS,EAAE;AADA;AA7BwB,CAAL,CAAN,CAA5B;;AAkCA,MAAMc,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB5C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC6C,QAAD,EAAWC,WAAX,IAA0B9C,QAAQ,CAAC,MAAD,CAAxC;AACA,QAAM,CAAC+C,aAAD,EAAgBC,gBAAhB,IAAoChD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACiD,QAAD,EAAWC,WAAX,IAA0BlD,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACmD,WAAD,EAAcC,cAAd,IAAgCpD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACqD,KAAD,EAAQC,QAAR,IAAoBtD,QAAQ,CAAC,CACjC;AAAEuD,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAE,gBAAd;AAAgCpB,IAAAA,IAAI,EAAE,MAAtC;AAA8CE,IAAAA,MAAM,EAAE;AAAtD,GADiC,EAEjC;AAAEiB,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAE,gBAAd;AAAgCpB,IAAAA,IAAI,EAAE,YAAtC;AAAoDE,IAAAA,MAAM,EAAE;AAA5D,GAFiC,EAGjC;AAAEiB,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAE,gBAAd;AAAgCpB,IAAAA,IAAI,EAAE,WAAtC;AAAmDE,IAAAA,MAAM,EAAE;AAA3D,GAHiC,EAIjC;AAAEiB,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAE,gBAAd;AAAgCpB,IAAAA,IAAI,EAAE,4CAAtC;AAAoFE,IAAAA,MAAM,EAAE;AAA5F,GAJiC,CAAD,CAAlC;;AAOA,QAAMmB,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA;;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ,EAJwB,CAKxB;;AACA;;;;AAGAG,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAVD;;AAYA,QAAMY,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,MAAtB,GAA+BrB,OAAO,CAACmB,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAtC,GAA6DlB,gBAAgB,CAACe,KAAK,CAACC,MAAN,CAAaE,KAAd,CAA7E;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBrB,IAAAA,WAAW,CAAC,MAAD,CAAX;AACA,QAAIsB,SAAS,GAAG,WAAhB;AACApB,IAAAA,gBAAgB,CAACoB,SAAD,CAAhB;AACD,GAJD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrBvB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,QAAIwB,QAAQ,GAAG,UAAf;AACAtB,IAAAA,gBAAgB,CAACsB,QAAD,CAAhB;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAG,MAAM;AAC3BrB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMsB,eAAe,GAAIjB,EAAD,IAAQ;AAC9B,UAAMkB,QAAQ,GAAGpB,KAAK,CAACqB,GAAN,CAAUC,GAAG,IAAI;AAChC,aAAOA,GAAG,CAACpB,EAAJ,KAAWA,EAAX,GAAgB,EAAE,GAAGoB,GAAL;AAAUrC,QAAAA,MAAM,EAAE;AAAlB,OAAhB,GAAwCqC,GAA/C;AACD,KAFgB,CAAjB;AAGArB,IAAAA,QAAQ,CAACmB,QAAD,CAAR;AACArB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAND;;AAQA,QAAMwB,aAAa,GAAIrB,EAAD,IAAQ;AAC5B,UAAMkB,QAAQ,GAAGpB,KAAK,CAACqB,GAAN,CAAUC,GAAG,IAAI;AAChC,aAAOA,GAAG,CAACpB,EAAJ,KAAWA,EAAX,GAAgB,EAAE,GAAGoB,GAAL;AAAUrC,QAAAA,MAAM,EAAE;AAAlB,OAAhB,GAAwCqC,GAA/C;AACD,KAFgB,CAAjB;AAGArB,IAAAA,QAAQ,CAACmB,QAAD,CAAR;AACD,GALD;;AAOA,QAAMI,OAAO,GAAGxD,SAAS,EAAzB;AAEA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEwD,OAAO,CAACtD,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAKI0B,QAAQ,GACN;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAA8B,IAAA,SAAS,EAAEoB,OAAO,CAAC9C,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAE,CAA1C;AAA6C,IAAA,SAAS,EAAE8C,OAAO,CAAC7C,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,WAAtB;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,KAAK,EAAC,SAArD;AAA+D,IAAA,OAAO,EAAEmC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,WAAtB;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,KAAK,EAAC,SAArD;AAA+D,IAAA,OAAO,EAAEE,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAJF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAE,CAA1C;AAA6C,IAAA,SAAS,EAAEQ,OAAO,CAAC5C,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIY,QAAQ,KAAK,MAAb,GACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,KAAK,EAAC,oBAJR;AAKE,IAAA,YAAY,EAAEF,IALhB;AAME,IAAA,QAAQ,EAAEmB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,GAWI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,KAAK,EAAC,mBAJR;AAKE,IAAA,YAAY,EAAEnB,IALhB;AAME,IAAA,QAAQ,EAAEmB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAbR,EAwBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,WAAtB;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAA+C,IAAA,KAAK,EAAC,SAArD;AAA+D,IAAA,IAAI,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAxBF,CATF,CADM,GAuCJ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAuCnB,IAAvC,CAAjB;AAA+E,IAAA,SAAS,EAAEkC,OAAO,CAACC,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAED,OAAO,CAACC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIzB,KAAK,CAACqB,GAAN,CAAU,CAACC,GAAD,EAAMI,KAAN,KAAgB;AAAI;AAC5B;AACA,QAAIJ,GAAG,CAACvC,IAAJ,KAAauC,GAAG,CAACvC,IAAJ,CAAS4C,MAAT,CAAgBrC,IAAhB,IAAwB,CAAC,CAAzB,IAA8BgC,GAAG,CAACnB,GAAJ,CAAQwB,MAAR,CAAerC,IAAf,IAAuB,CAAC,CAAnE,CAAJ,EAA2E;AACzE,aACE;AAAK,QAAA,GAAG,EAAEgC,GAAG,CAACpB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEoB,GAAG,CAACpB,EAAnB;AAAuB,QAAA,OAAO,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEsB,OAAO,CAACzC,IAArB;AAA2B,QAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CuC,GAAG,CAACvC,IAAJ,CAAS6C,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAA5C,CADF,CADF,EAIE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEJ,OAAO,CAACzC,IAAjC;AACE,QAAA,OAAO,EAAEuC,GAAG,CAACvC,IAAJ,CAAS8C,WAAT,EADX;AAEE,QAAA,SAAS,EACP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,OAAO,EAAC,OAFV;AAGE,UAAA,SAAS,EAAEL,OAAO,CAAC3C,MAHrB;AAIE,UAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EASGyC,GAAG,CAACnB,GATP,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAoBE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEqB,OAAO,CAACvC,MAAjC;AACE,QAAA,SAAS,EACP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,OAAO,EAAC,OAFV;AAGE,UAAA,SAAS,EAAEuC,OAAO,CAAC3C,MAHrB;AAIE,UAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMGyC,GAAG,CAACrC,MAAJ,KAAe,CAAf,GAAmB,YAAnB,GAAkC,YANrC,CADF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAmCE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIqC,GAAG,CAACrC,MAAJ,KAAe,CAAf,GACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,KAAjB;AAAuB,sBAAW,WAAlC;AAA8C,QAAA,KAAK,EAAC,WAApD;AAAgE,QAAA,OAAO,EAAE,MAAMkC,eAAe,CAACG,GAAG,CAACpB,EAAL,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,GAII,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,KAAjB;AAAuB,sBAAW,UAAlC;AAA6C,QAAA,KAAK,EAAC,UAAnD;AAA8D,QAAA,OAAO,EAAE,MAAMqB,aAAa,CAACD,GAAG,CAACpB,EAAL,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CANR,CAnCF,CADF,EAgDE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,OAAjB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDF,CADF;AAoDD;AACF,GAxDD,CAFJ,CAHA,EAiEA,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEsB,OAAO,CAACrC,WAA3B;AAAwC,IAAA,OAAO,EAAC,WAAhD;AAA4D,IAAA,IAAI,EAAC,OAAjE;AAAyE,IAAA,KAAK,EAAC,SAA/E;AAAyF,IAAA,OAAO,EAAE+B,cAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEA,CA5CR,EAgHE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,eAA1B;AAA0C,IAAA,EAAE,EAAC,eAA7C;AACE,IAAA,QAAQ,EAAET,YADZ;AAC0B,IAAA,KAAK,EAAEf,aADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhHF,CADF,EAoHE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEI,WAAzB;AAAsC,IAAA,WAAW,EAAE,MAAMC,cAAc,CAAC,KAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApHF,CADF;AAwHD,CAtLD;;AAwLA,eAAeX,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CustomButton from '../components/CustomButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FullScreenMessage from './../components/FullScreenMessage';\r\n\r\n/*import { Link } from 'react-router-dom';*/\r\nimport logo from '../assets/logo.jpg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    marginTop: theme.spacing(8),\r\n    textAlign: 'center',\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  gridBotao: {\r\n    marginTop: theme.spacing(8)\r\n  },\r\n  gridPesquisa: {\r\n    marginTop: theme.spacing(8)\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  nome: {\r\n    maxwidth: '80%',\r\n  },\r\n  status: {\r\n    paddingRight: theme.spacing(10),\r\n    textAlign: 'right',\r\n    height: '100%'\r\n  },\r\n  botaoVoltar: {\r\n    marginTop: '20px'\r\n  }\r\n}));\r\n\r\nconst Checkin = (props) => {\r\n  const [find, setFind] = useState('');\r\n  const [typeFind, setTypeFind] = useState('nome');\r\n  const [queryPesquisa, setQueryPesquisa] = useState('');\r\n  const [showForm, setShowForm] = useState(true);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [dados, setDados] = useState([\r\n    { id: 1, cpf: '458.054.120-30', nome: 'Jose', status: 0 },\r\n    { id: 2, cpf: '800.554.651-20', nome: 'Jose Silva', status: 0 },\r\n    { id: 3, cpf: '700.366.111-07', nome: 'Math Card', status: 1 },\r\n    { id: 4, cpf: '700.366.187-07', nome: 'Lucas Luis do Reis Filho Mezenga Matuzalem', status: 0 },\r\n  ]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    /*console.log(this.state.find);\r\n        */\r\n    console.log(queryPesquisa);\r\n    // FUNCIONOU\r\n    /*if(this.state.find == 'e'){\r\n        console.log('Essa merda traz um vetor');\r\n    }*/\r\n    setShowForm(false);\r\n  }\r\n\r\n  const handleChange = event => {\r\n    event.target.name === 'find' ? setFind(event.target.value) : setQueryPesquisa(event.target.value);\r\n  }\r\n\r\n  const inputNome = () => {\r\n    setTypeFind('nome');\r\n    let queryName = 'queryName';\r\n    setQueryPesquisa(queryName);\r\n  }\r\n\r\n  const inputCpf = () => {\r\n    setTypeFind('cpf');\r\n    let queryCpf = 'queryCpf';\r\n    setQueryPesquisa(queryCpf);\r\n  }\r\n\r\n  const voltarPesquisa = () => {\r\n    setShowForm(true);\r\n  }\r\n\r\n  const confirmaCheckin = (id) => {\r\n    const newDados = dados.map(res => {\r\n      return res.id === id ? { ...res, status: 1 } : res;\r\n    })\r\n    setDados(newDados);\r\n    setShowMessage(true);\r\n  }\r\n\r\n  const desfazCheckin = (id) => {\r\n    const newDados = dados.map(res => {\r\n      return res.id === id ? { ...res, status: 0 } : res;\r\n    })\r\n    setDados(newDados);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Checkin\r\n        </Typography>\r\n        {\r\n          showForm ?\r\n            <form onSubmit={handleSubmit} className={classes.form}>\r\n              <Grid container justify=\"center\" spacing={2} className={classes.gridBotao}>\r\n                <Grid item>\r\n                  <CustomButton variant=\"contained\" size=\"large\" color=\"primary\" onClick={inputNome}>Nome</CustomButton>\r\n                </Grid>\r\n                <Grid item>\r\n                  <CustomButton variant=\"contained\" size=\"large\" color=\"primary\" onClick={inputCpf}>CPF</CustomButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"center\" spacing={2} className={classes.gridPesquisa}>\r\n                {\r\n                  typeFind === 'nome'\r\n                    ? <Grid item>\r\n                      <TextField\r\n                        required\r\n                        name=\"find\"\r\n                        id=\"find\"\r\n                        label=\"Pesquise pelo Nome\"\r\n                        defaultValue={find}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                    : <Grid item>\r\n                      <TextField\r\n                        required\r\n                        name=\"find\"\r\n                        id=\"find\"\r\n                        label=\"Pesquise pelo CPF\"\r\n                        defaultValue={find}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                }\r\n                <Grid item>\r\n                  <CustomButton variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\">Pesquisar</CustomButton>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            : <div className=\"result\">\r\n              {/* Início Lista */}\r\n              <List subheader={<ListSubheader>Parâmetro de pesquisa: {find}</ListSubheader>} className={classes.root}></List>\r\n              <List id=\"resultado\" className={classes.root}>\r\n                {\r\n                  dados.map((res, index) => {   //const {id, cpf, nome, status } = res;                                                                                                                                                                                              \r\n                    //res.id == null ? <span>Vazio</span> :\r\n                    if (res.nome && (res.nome.search(find) > -1 || res.cpf.search(find) > -1)) {\r\n                      return (\r\n                        <div key={res.id}>\r\n                          <ListItem key={res.id} display=\"flex\">\r\n                            <ListItemAvatar>\r\n                              <Avatar alt={classes.nome} color=\"primary\">{res.nome.substring(0, 1)}</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText className={classes.nome}\r\n                              primary={res.nome.toUpperCase()}\r\n                              secondary={\r\n                                <React.Fragment>\r\n                                  <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                  >\r\n\r\n                                  </Typography>\r\n                                  {res.cpf}\r\n                                </React.Fragment>\r\n                              }\r\n                            />\r\n                            <ListItemText className={classes.status}\r\n                              secondary={\r\n                                <React.Fragment>\r\n                                  <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                  >\r\n                                    {res.status === 0 ? 'Pendente  ' : 'Confirmado'}\r\n                                  </Typography>\r\n\r\n                                </React.Fragment>\r\n                              }\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                              {\r\n                                res.status === 0\r\n                                  ? <IconButton edge=\"end\" aria-label=\"Confirmar\" title=\"Confirmar\" onClick={() => confirmaCheckin(res.id)}>\r\n                                    <EventAvailableIcon />\r\n                                  </IconButton>\r\n                                  : <IconButton edge=\"end\" aria-label=\"Desfazer\" title=\"Desfazer\" onClick={() => desfazCheckin(res.id)}>\r\n                                    <EventAvailableIcon color=\"primary\" />\r\n                                  </IconButton>\r\n                              }\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                          <Divider variant=\"inset\" component=\"li\" />\r\n                        </div>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </List>\r\n              {/* Final Lista */}\r\n              <Button className={classes.botaoVoltar} variant=\"contained\" size=\"large\" color=\"primary\" onClick={voltarPesquisa}>Voltar</Button>\r\n            </div>\r\n        }\r\n        <input type=\"hidden\" name=\"queryPesquisa\" id=\"queryPesquisa\"\r\n          onChange={handleChange} value={queryPesquisa} />\r\n      </Paper>\r\n      <FullScreenMessage show={showMessage} handleClose={() => setShowMessage(false)} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Checkin;"]},"metadata":{},"sourceType":"module"}